#include "IsFailo.h"
#include <iostream>
#include <iomanip>
#include<cmath>
#include <Windows.h>
#include <fstream>
#include <algorithm>
#include "studentai.h"
#include <sstream>
#include <vector>
#include <random>
using std::cin;
using std::cout;
using std::string;
using std::ifstream;
using std::ofstream;
using std::setprecision;
using std::swap;
using std::sort;
using std::endl;
using std::vector;
using std::setw;
using std::random_device;
using std::mt19937;
using std::uniform_real_distribution;
void IsFailo(vector <Studentas> &a,vector <Studentas> &b,vector <Studentas> &c)
{
        int kof1=0;
        int kof2=0;
        int i=0;
        ifstream fd("duom.txt");
        ofstream fr("rez.txt");
        int o=0;
        double g;
        string line;
        while (std::getline(fd, line)) //skaito po eilute ir iveda duomenis
        {
            a.push_back(Studentas());

            std::istringstream iss(line);
            iss>>a[o].vard;
            iss>>a[o].pav;
            while (iss >> g) //ivedineja, kol yra pazymiu
            {
                a[o].v.push_back(g);
                a[o].vid=a[o].v[i]+a[o].vid;
                i++;
            }
            a[o].egz=a[o].v[i];
            a[o].v.pop_back();
            a[o].vid=a[o].vid/(i);
            sort(a[o].v.begin(),a[o].v.end());
            for(int j=0; j<i; j++) //iesko medianos
            {
                if(i/2==j && i%10!=0)
                    a[o].med=a[o].v[j-1];
                if(i/2==j && i%10==0)
                    a[o].med=(a[o].v[j]+a[o].v[j+1])/2;
            }
            if(a[o].vid<6) //iraso i atskirus vektorius zmones, kurie prileisi ir kurie neprileisti prie egzamino
                {b.push_back(Studentas());
                b[kof1]=a[o];
                kof1++;
                }
            if(a[o].vid>=6)
            {
                c.push_back(Studentas());
                c[kof2]=a[o];
                kof2++;
            }
            o++;
            i=0;


        }
        for(int j=0; j<kof1; j++)  //rikiuoja gautus rezultatus pagal VARDA
            for(int r=j+1; r<kof1-1; r++)
            {
                if(b[j].vard>b[r].vard)
                    swap(b[j],b[r]);
            }
        for(int j=0; j<kof2; j++)  //rikiuoja gautus rezultatus pagal VARDA
            for(int r=j+1; r<kof2-1; r++)
            {
                if(c[j].vard>c[r].vard)
                    swap(c[j],c[r]);
            }
        fr<<"Vardas     Pavarde       vidurkis   mediana"<<endl;
        fr<<"looseriai:"<<endl;
        for(int i=0; i<kof1; i++)
        {

            b[i].vard.resize(9); //resize'inu string'us, kad galeciau graziai isdelioti rezultatu faile
            b[i].pav.resize(9);
            fr<<b[i].vard<<"  "<<b[i].pav<<"  "<<setprecision(2)<<setw(8)<<b[i].vid<<"         "<<b[i].med<<endl;
        }
        fr<<"mandruoliai:"<<endl;
        for(int i=0; i<kof2; i++)
        {

            c[i].vard.resize(9); //resize'inu string'us, kad galeciau graziai isdelioti rezultatu faile
            c[i].pav.resize(9);
            fr<<c[i].vard<<"  "<<c[i].pav<<"  "<<setprecision(2)<<setw(8)<<c[i].vid<<"         "<<c[i].med<<endl;
        }
        fr.close();
        fd.close();
}
